# 项目上下文信息

**项目名称**: aws_pricing_assistant
**Agent名称**: aws_pricing_agent  
**开发阶段**: tools_developer
**生成时间**: 2025-09-11 06:30:11 UTC

---

{
  "tool_development": {
    "development_overview": {
      "project_name": "aws_pricing_assistant",
      "version": "1.0",
      "date": "2025-09-11",
      "development_scope": "开发一套全面的AWS产品报价工具，支持EC2、EBS、S3、RDS、ElastiCache、OpenSearch、负载均衡器和网络流量的实时价格查询，以及智能配置推荐和销售报价生成",
      "design_principles": [
        "模块化设计：将功能拆分为多个模块，便于维护和扩展",
        "完整错误处理：实现健壮的异常处理机制，确保工具稳定运行",
        "缓存优化：实现缓存机制提高性能，减少API调用",
        "类型安全：使用完整的类型注解确保代码质量",
        "用户友好：提供清晰的文档和易用的接口"
      ],
      "key_decisions": [
        "使用boto3进行AWS API调用，确保与AWS服务的无缝集成",
        "实现缓存机制减少API调用次数，提高性能",
        "设计推荐算法，能够根据不完整的需求描述推荐合适的AWS资源",
        "支持多种报价格式，满足不同场景的需求",
        "支持所有AWS区域，包括中国区"
      ]
    },
    "tools": [
      {
        "tool_name": "get_ec2_instance_types",
        "description": "获取特定区域可用的EC2实例类型",
        "function_signature": "get_ec2_instance_types(region: str = \"us-east-1\") -> str",
        "parameters": [
          {
            "name": "region",
            "type": "str",
            "description": "AWS区域代码",
            "required": false
          }
        ],
        "return_type": "str",
        "return_description": "包含EC2实例类型及其属性的JSON字符串",
        "dependencies": ["boto3"],
        "implementation_notes": [
          "使用boto3.client('ec2')获取实例类型信息",
          "支持分页获取所有实例类型",
          "返回包含vCPU、内存、架构等详细信息"
        ],
        "error_handling": [
          "捕获并处理ClientError和BotoCoreError",
          "返回格式化的错误信息"
        ],
        "usage_examples": [
          "获取us-east-1区域的所有EC2实例类型"
        ]
      },
      {
        "tool_name": "get_ec2_pricing",
        "description": "获取特定EC2实例类型、区域和操作系统的价格",
        "function_signature": "get_ec2_pricing(instance_type: str, region: str = \"us-east-1\", os: str = \"linux\", tenancy: str = \"shared\") -> str",
        "parameters": [
          {
            "name": "instance_type",
            "type": "str",
            "description": "EC2实例类型",
            "required": true
          },
          {
            "name": "region",
            "type": "str",
            "description": "AWS区域代码",
            "required": false
          },
          {
            "name": "os",
            "type": "str",
            "description": "操作系统",
            "required": false
          },
          {
            "name": "tenancy",
            "type": "str",
            "description": "租赁类型",
            "required": false
          }
        ],
        "return_type": "str",
        "return_description": "包含EC2价格信息的JSON字符串",
        "dependencies": ["boto3"],
        "implementation_notes": [
          "使用AWS Pricing API获取价格数据",
          "支持按需和预留实例价格",
          "实现缓存机制减少API调用"
        ],
        "error_handling": [
          "验证输入参数",
          "捕获并处理API错误",
          "返回格式化的错误信息"
        ],
        "usage_examples": [
          "获取t3.micro实例在us-east-1区域运行Linux的价格"
        ]
      },
      {
        "tool_name": "get_ebs_pricing",
        "description": "获取特定EBS卷类型和区域的价格",
        "function_signature": "get_ebs_pricing(volume_type: str, region: str = \"us-east-1\", size_gb: Optional[int] = None) -> str",
        "parameters": [
          {
            "name": "volume_type",
            "type": "str",
            "description": "EBS卷类型",
            "required": true
          },
          {
            "name": "region",
            "type": "str",
            "description": "AWS区域代码",
            "required": false
          },
          {
            "name": "size_gb",
            "type": "Optional[int]",
            "description": "卷大小（GB）",
            "required": false
          }
        ],
        "return_type": "str",
        "return_description": "包含EBS价格信息的JSON字符串",
        "dependencies": ["boto3"],
        "implementation_notes": [
          "使用AWS Pricing API获取价格数据",
          "支持计算特定大小卷的总成本",
          "实现缓存机制减少API调用"
        ],
        "error_handling": [
          "验证卷类型是否有效",
          "捕获并处理API错误",
          "返回格式化的错误信息"
        ],
        "usage_examples": [
          "获取100GB gp3卷在us-east-1区域的价格"
        ]
      },
      {
        "tool_name": "get_s3_pricing",
        "description": "获取特定S3存储类别和区域的价格",
        "function_signature": "get_s3_pricing(storage_class: str = \"standard\", region: str = \"us-east-1\", storage_gb: Optional[int] = None, data_transfer_gb: Optional[int] = None) -> str",
        "parameters": [
          {
            "name": "storage_class",
            "type": "str",
            "description": "S3存储类别",
            "required": false
          },
          {
            "name": "region",
            "type": "str",
            "description": "AWS区域代码",
            "required": false
          },
          {
            "name": "storage_gb",
            "type": "Optional[int]",
            "description": "存储大小（GB）",
            "required": false
          },
          {
            "name": "data_transfer_gb",
            "type": "Optional[int]",
            "description": "数据传输量（GB）",
            "required": false
          }
        ],
        "return_type": "str",
        "return_description": "包含S3价格信息的JSON字符串",
        "dependencies": ["boto3"],
        "implementation_notes": [
          "使用AWS Pricing API获取价格数据",
          "支持计算存储和数据传输的总成本",
          "实现缓存机制减少API调用"
        ],
        "error_handling": [
          "验证存储类别是否有效",
          "捕获并处理API错误",
          "返回格式化的错误信息"
        ],
        "usage_examples": [
          "获取500GB标准存储和100GB数据传输在us-east-1区域的价格"
        ]
      },
      {
        "tool_name": "get_rds_pricing",
        "description": "获取特定RDS实例类型、数据库引擎和区域的价格",
        "function_signature": "get_rds_pricing(instance_type: str, engine: str, region: str = \"us-east-1\", deployment_option: str = \"single-az\", license_model: str = \"license-included\") -> str",
        "parameters": [
          {
            "name": "instance_type",
            "type": "str",
            "description": "RDS实例类型",
            "required": true
          },
          {
            "name": "engine",
            "type": "str",
            "description": "数据库引擎",
            "required": true
          },
          {
            "name": "region",
            "type": "str",
            "description": "AWS区域代码",
            "required": false
          },
          {
            "name": "deployment_option",
            "type": "str",
            "description": "部署选项",
            "required": false
          },
          {
            "name": "license_model",
            "type": "str",
            "description": "许可模式",
            "required": false
          }
        ],
        "return_type": "str",
        "return_description": "包含RDS价格信息的JSON字符串",
        "dependencies": ["boto3"],
        "implementation_notes": [
          "使用AWS Pricing API获取价格数据",
          "支持按需和预留实例价格",
          "支持多种数据库引擎和部署选项",
          "实现缓存机制减少API调用"
        ],
        "error_handling": [
          "验证数据库引擎是否有效",
          "捕获并处理API错误",
          "返回格式化的错误信息"
        ],
        "usage_examples": [
          "获取db.m5.large MySQL实例在us-east-1区域的价格"
        ]
      },
      {
        "tool_name": "get_elasticache_pricing",
        "description": "获取特定ElastiCache节点类型、缓存引擎和区域的价格",
        "function_signature": "get_elasticache_pricing(node_type: str, engine: str = \"redis\", region: str = \"us-east-1\") -> str",
        "parameters": [
          {
            "name": "node_type",
            "type": "str",
            "description": "ElastiCache节点类型",
            "required": true
          },
          {
            "name": "engine",
            "type": "str",
            "description": "缓存引擎",
            "required": false
          },
          {
            "name": "region",
            "type": "str",
            "description": "AWS区域代码",
            "required": false
          }
        ],
        "return_type": "str",
        "return_description": "包含ElastiCache价格信息的JSON字符串",
        "dependencies": ["boto3"],
        "implementation_notes": [
          "使用AWS Pricing API获取价格数据",
          "支持Redis和Memcached引擎",
          "支持按需和预留节点价格",
          "实现缓存机制减少API调用"
        ],
        "error_handling": [
          "验证缓存引擎是否有效",
          "捕获并处理API错误",
          "返回格式化的错误信息"
        ],
        "usage_examples": [
          "获取cache.m5.large Redis节点在us-east-1区域的价格"
        ]
      },
      {
        "tool_name": "get_opensearch_pricing",
        "description": "获取特定OpenSearch实例类型、区域和存储的价格",
        "function_signature": "get_opensearch_pricing(instance_type: str, region: str = \"us-east-1\", storage_gb: Optional[int] = None) -> str",
        "parameters": [
          {
            "name": "instance_type",
            "type": "str",
            "description": "OpenSearch实例类型",
            "required": true
          },
          {
            "name": "region",
            "type": "str",
            "description": "AWS区域代码",
            "required": false
          },
          {
            "name": "storage_gb",
            "type": "Optional[int]",
            "description": "存储大小（GB）",
            "required": false
          }
        ],
        "return_type": "str",
        "return_description": "包含OpenSearch价格信息的JSON字符串",
        "dependencies": ["boto3"],
        "implementation_notes": [
          "使用AWS Pricing API获取价格数据",
          "支持计算实例和存储的总成本",
          "实现缓存机制减少API调用"
        ],
        "error_handling": [
          "捕获并处理API错误",
          "返回格式化的错误信息"
        ],
        "usage_examples": [
          "获取m5.large.search实例和100GB存储在us-east-1区域的价格"
        ]
      },
      {
        "tool_name": "get_loadbalancer_pricing",
        "description": "获取特定负载均衡器类型和区域的价格",
        "function_signature": "get_loadbalancer_pricing(lb_type: str, region: str = \"us-east-1\", data_processed_gb: Optional[int] = None) -> str",
        "parameters": [
          {
            "name": "lb_type",
            "type": "str",
            "description": "负载均衡器类型",
            "required": true
          },
          {
            "name": "region",
            "type": "str",
            "description": "AWS区域代码",
            "required": false
          },
          {
            "name": "data_processed_gb",
            "type": "Optional[int]",
            "description": "处理的数据量（GB）",
            "required": false
          }
        ],
        "return_type": "str",
        "return_description": "包含负载均衡器价格信息的JSON字符串",
        "dependencies": ["boto3"],
        "implementation_notes": [
          "使用AWS Pricing API获取价格数据",
          "支持ALB、NLB和CLB类型",
          "支持计算负载均衡器和数据处理的总成本",
          "实现缓存机制减少API调用"
        ],
        "error_handling": [
          "验证负载均衡器类型是否有效",
          "捕获并处理API错误",
          "返回格式化的错误信息"
        ],
        "usage_examples": [
          "获取ALB和500GB数据处理在us-east-1区域的价格"
        ]
      },
      {
        "tool_name": "get_network_pricing",
        "description": "获取AWS区域间或到互联网的数据传输价格",
        "function_signature": "get_network_pricing(from_region: str, to_region: Optional[str] = None, to_internet: bool = False, data_transfer_gb: int = 100) -> str",
        "parameters": [
          {
            "name": "from_region",
            "type": "str",
            "description": "源AWS区域代码",
            "required": true
          },
          {
            "name": "to_region",
            "type": "Optional[str]",
            "description": "目标AWS区域代码",
            "required": false
          },
          {
            "name": "to_internet",
            "type": "bool",
            "description": "是否传输到互联网",
            "required": false
          },
          {
            "name": "data_transfer_gb",
            "type": "int",
            "description": "数据传输量（GB）",
            "required": false
          }
        ],
        "return_type": "str",
        "return_description": "包含网络数据传输价格信息的JSON字符串",
        "dependencies": ["boto3"],
        "implementation_notes": [
          "使用AWS Pricing API获取价格数据",
          "支持区域间和到互联网的数据传输",
          "实现缓存机制减少API调用"
        ],
        "error_handling": [
          "验证区域是否有效",
          "捕获并处理API错误",
          "返回格式化的错误信息"
        ],
        "usage_examples": [
          "获取从us-east-1到互联网传输100GB数据的价格"
        ]
      },
      {
        "tool_name": "calculate_aws_cost",
        "description": "计算一组AWS资源的总成本",
        "function_signature": "calculate_aws_cost(resources: List[Dict[str, Any]], region: str = \"us-east-1\") -> str",
        "parameters": [
          {
            "name": "resources",
            "type": "List[Dict[str, Any]]",
            "description": "资源配置列表",
            "required": true
          },
          {
            "name": "region",
            "type": "str",
            "description": "AWS区域代码",
            "required": false
          }
        ],
        "return_type": "str",
        "return_description": "包含详细成本明细和总成本的JSON字符串",
        "dependencies": ["boto3"],
        "implementation_notes": [
          "整合多个价格查询工具的功能",
          "支持多种资源类型的成本计算",
          "提供详细的成本明细和总成本"
        ],
        "error_handling": [
          "验证资源配置是否有效",
          "捕获并处理各种错误",
          "返回格式化的错误信息"
        ],
        "usage_examples": [
          "计算EC2实例、EBS卷和S3存储的总成本"
        ]
      },
      {
        "tool_name": "recommend_ec2_instance",
        "description": "根据用户需求推荐EC2实例类型",
        "function_signature": "recommend_ec2_instance(description: str, region: str = \"us-east-1\", is_production: bool = True) -> str",
        "parameters": [
          {
            "name": "description",
            "type": "str",
            "description": "用户需求的自然语言描述",
            "required": true
          },
          {
            "name": "region",
            "type": "str",
            "description": "AWS区域代码",
            "required": false
          },
          {
            "name": "is_production",
            "type": "bool",
            "description": "是否用于生产环境",
            "required": false
          }
        ],
        "return_type": "str",
        "return_description": "包含推荐EC2实例类型和理由的JSON字符串",
        "dependencies": ["boto3", "re"],
        "implementation_notes": [
          "解析自然语言需求提取CPU和内存要求",
          "考虑生产环境要求（避免t系列实例）",
          "根据需求筛选和排序实例类型",
          "提供多个推荐选项和理由"
        ],
        "error_handling": [
          "处理不完整或模糊的需求描述",
          "捕获并处理API错误",
          "返回格式化的错误信息"
        ],
        "usage_examples": [
          "根据'需要4核8GB内存的Web服务器'推荐EC2实例类型"
        ]
      },
      {
        "tool_name": "recommend_ebs_volume",
        "description": "根据用户需求推荐EBS卷类型",
        "function_signature": "recommend_ebs_volume(description: str, region: str = \"us-east-1\", is_production: bool = True) -> str",
        "parameters": [
          {
            "name": "description",
            "type": "str",
            "description": "用户需求的自然语言描述",
            "required": true
          },
          {
            "name": "region",
            "type": "str",
            "description": "AWS区域代码",
            "required": false
          },
          {
            "name": "is_production",
            "type": "bool",
            "description": "是否用于生产环境",
            "required": false
          }
        ],
        "return_type": "str",
        "return_description": "包含推荐EBS卷类型和理由的JSON字符串",
        "dependencies": ["re"],
        "implementation_notes": [
          "解析自然语言需求提取存储大小和类型要求",
          "考虑生产环境和性能需求",
          "提供多个推荐选项和理由",
          "包含价格估算"
        ],
        "error_handling": [
          "处理不完整或模糊的需求描述",
          "捕获并处理各种错误",
          "返回格式化的错误信息"
        ],
        "usage_examples": [
          "根据'需要500GB高性能存储'推荐EBS卷类型"
        ]
      },
      {
        "tool_name": "recommend_s3_storage",
        "description": "根据用户需求推荐S3存储类别",
        "function_signature": "recommend_s3_storage(description: str, region: str = \"us-east-1\") -> str",
        "parameters": [
          {
            "name": "description",
            "type": "str",
            "description": "用户需求的自然语言描述",
            "required": true
          },
          {
            "name": "region",
            "type": "str",
            "description": "AWS区域代码",
            "required": false
          }
        ],
        "return_type": "str",
        "return_description": "包含推荐S3存储类别和理由的JSON字符串",
        "dependencies": ["re"],
        "implementation_notes": [
          "解析自然语言需求提取存储需求",
          "考虑访问频率和持久性需求",
          "提供多个推荐选项和理由",
          "包含价格估算"
        ],
        "error_handling": [
          "处理不完整或模糊的需求描述",
          "捕获并处理各种错误",
          "返回格式化的错误信息"
        ],
        "usage_examples": [
          "根据'需要存储不常访问的备份数据'推荐S3存储类别"
        ]
      },
      {
        "tool_name": "recommend_rds_instance",
        "description": "根据用户需求推荐RDS实例类型",
        "function_signature": "recommend_rds_instance(description: str, region: str = \"us-east-1\", is_production: bool = True) -> str",
        "parameters": [
          {
            "name": "description",
            "type": "str",
            "description": "用户需求的自然语言描述",
            "required": true
          },
          {
            "name": "region",
            "type": "str",
            "description": "AWS区域代码",
            "required": false
          },
          {
            "name": "is_production",
            "type": "bool",
            "description": "是否用于生产环境",
            "required": false
          }
        ],
        "return_type": "str",
        "return_description": "包含推荐RDS实例类型和理由的JSON字符串",
        "dependencies": ["re"],
        "implementation_notes": [
          "解析自然语言需求提取数据库引擎和性能要求",
          "考虑生产环境和高可用性需求",
          "提供多个推荐选项和理由",
          "包含价格估算"
        ],
        "error_handling": [
          "处理不完整或模糊的需求描述",
          "捕获并处理各种错误",
          "返回格式化的错误信息"
        ],
        "usage_examples": [
          "根据'需要高性能MySQL数据库'推荐RDS实例类型"
        ]
      },
      {
        "tool_name": "recommend_elasticache_node",
        "description": "根据用户需求推荐ElastiCache节点类型",
        "function_signature": "recommend_elasticache_node(description: str, region: str = \"us-east-1\", is_production: bool = True) -> str",
        "parameters": [
          {
            "name": "description",
            "type": "str",
            "description": "用户需求的自然语言描述",
            "required": true
          },
          {
            "name": "region",
            "type": "str",
            "description": "AWS区域代码",
            "required": false
          },
          {
            "name": "is_production",
            "type": "bool",
            "description": "是否用于生产环境",
            "required": false
          }
        ],
        "return_type": "str",
        "return_description": "包含推荐ElastiCache节点类型和理由的JSON字符串",
        "dependencies": ["re"],
        "implementation_notes": [
          "解析自然语言需求提取缓存引擎和内存要求",
          "考虑生产环境和性能需求",
          "提供多个推荐选项和理由",
          "包含价格估算"
        ],
        "error_handling": [
          "处理不完整或模糊的需求描述",
          "捕获并处理各种错误",
          "返回格式化的错误信息"
        ],
        "usage_examples": [
          "根据'需要8GB内存的Redis缓存'推荐ElastiCache节点类型"
        ]
      },
      {
        "tool_name": "recommend_opensearch_domain",
        "description": "根据用户需求推荐OpenSearch域配置",
        "function_signature": "recommend_opensearch_domain(description: str, region: str = \"us-east-1\", is_production: bool = True) -> str",
        "parameters": [
          {
            "name": "description",
            "type": "str",
            "description": "用户需求的自然语言描述",
            "required": true
          },
          {
            "name": "region",
            "type": "str",
            "description": "AWS区域代码",
            "required": false
          },
          {
            "name": "is_production",
            "type": "bool",
            "description": "是否用于生产环境",
            "required": false
          }
        ],
        "return_type": "str",
        "return_description": "包含推荐OpenSearch域配置和理由的JSON字符串",
        "dependencies": ["re"],
        "implementation_notes": [
          "解析自然语言需求提取性能和存储要求",
          "考虑生产环境和用例（日志分析、搜索等）",
          "提供多个推荐选项和理由",
          "包含价格估算"
        ],
        "error_handling": [
          "处理不完整或模糊的需求描述",
          "捕获并处理各种错误",
          "返回格式化的错误信息"
        ],
        "usage_examples": [
          "根据'需要日志分析系统处理5GB/天日志'推荐OpenSearch域配置"
        ]
      },
      {
        "tool_name": "recommend_loadbalancer",
        "description": "根据用户需求推荐负载均衡器类型",
        "function_signature": "recommend_loadbalancer(description: str, region: str = \"us-east-1\") -> str",
        "parameters": [
          {
            "name": "description",
            "type": "str",
            "description": "用户需求的自然语言描述",
            "required": true
          },
          {
            "name": "region",
            "type": "str",
            "description": "AWS区域代码",
            "required": false
          }
        ],
        "return_type": "str",
        "return_description": "包含推荐负载均衡器类型和理由的JSON字符串",
        "dependencies": ["re"],
        "implementation_notes": [
          "解析自然语言需求提取负载均衡器类型和数据处理需求",
          "考虑应用类型（HTTP/HTTPS或TCP/UDP）",
          "提供多个推荐选项和理由",
          "包含价格估算"
        ],
        "error_handling": [
          "处理不完整或模糊的需求描述",
          "捕获并处理各种错误",
          "返回格式化的错误信息"
        ],
        "usage_examples": [
          "根据'需要为Web应用提供负载均衡'推荐负载均衡器类型"
        ]
      },
      {
        "tool_name": "generate_aws_solution",
        "description": "根据用户需求生成完整的AWS解决方案",
        "function_signature": "generate_aws_solution(description: str, region: str = \"us-east-1\", is_production: bool = True) -> str",
        "parameters": [
          {
            "name": "description",
            "type": "str",
            "description": "用户需求的自然语言描述",
            "required": true
          },
          {
            "name": "region",
            "type": "str",
            "description": "AWS区域代码",
            "required": false
          },
          {
            "name": "is_production",
            "type": "bool",
            "description": "是否用于生产环境",
            "required": false
          }
        ],
        "return_type": "str",
        "return_description": "包含完整AWS解决方案和价格的JSON字符串",
        "dependencies": ["re"],
        "implementation_notes": [
          "整合多个推荐工具的功能",
          "根据需求描述识别所需的AWS服务",
          "生成完整的解决方案架构",
          "计算总体拥有成本",
          "提供架构建议"
        ],
        "error_handling": [
          "处理不完整或模糊的需求描述",
          "捕获并处理各种错误",
          "返回格式化的错误信息"
        ],
        "usage_examples": [
          "根据'需要部署高可用的Web应用，包含数据库和缓存'生成AWS解决方案"
        ]
      },
      {
        "tool_name": "generate_sales_proposal",
        "description": "根据客户需求生成专业的AWS销售报价方案",
        "function_signature": "generate_sales_proposal(customer_name: str, requirements: str, region: str = \"us-east-1\", is_production: bool = True, proposal_type: str = \"standard\", contact_info: Optional[Dict[str, str]] = None) -> str",
        "parameters": [
          {
            "name": "customer_name",
            "type": "str",
            "description": "客户名称",
            "required": true
          },
          {
            "name": "requirements",
            "type": "str",
            "description": "客户需求描述",
            "required": true
          },
          {
            "name": "region",
            "type": "str",
            "description": "AWS区域代码",
            "required": false
          },
          {
            "name": "is_production",
            "type": "bool",
            "description": "是否用于生产环境",
            "required": false
          },
          {
            "name": "proposal_type",
            "type": "str",
            "description": "报价方案类型",
            "required": false
          },
          {
            "name": "contact_info",
            "type": "Optional[Dict[str, str]]",
            "description": "联系信息",
            "required": false
          }
        ],
        "return_type": "str",
        "return_description": "包含结构化销售报价方案的JSON字符串",
        "dependencies": ["datetime"],
        "implementation_notes": [
          "基于generate_aws_solution生成技术方案",
          "创建专业的销售报价格式",
          "包含执行摘要、解决方案概述、技术规格、价格明细等部分",
          "提供成本优化建议和实施时间表"
        ],
        "error_handling": [
          "处理不完整或模糊的需求描述",
          "捕获并处理各种错误",
          "返回格式化的错误信息"
        ],
        "usage_examples": [
          "为客户'ABC公司'生成标准销售报价方案"
        ]
      },
      {
        "tool_name": "generate_migration_proposal",
        "description": "根据当前环境和目标需求生成AWS迁移方案",
        "function_signature": "generate_migration_proposal(customer_name: str, current_environment: str, target_requirements: str, region: str = \"us-east-1\", is_production: bool = True, contact_info: Optional[Dict[str, str]] = None) -> str",
        "parameters": [
          {
            "name": "customer_name",
            "type": "str",
            "description": "客户名称",
            "required": true
          },
          {
            "name": "current_environment",
            "type": "str",
            "description": "当前环境描述",
            "required": true
          },
          {
            "name": "target_requirements",
            "type": "str",
            "description": "目标需求描述",
            "required": true
          },
          {
            "name": "region",
            "type": "str",
            "description": "AWS区域代码",
            "required": false
          },
          {
            "name": "is_production",
            "type": "bool",
            "description": "是否用于生产环境",
            "required": false
          },
          {
            "name": "contact_info",
            "type": "Optional[Dict[str, str]]",
            "description": "联系信息",
            "required": false
          }
        ],
        "return_type": "str",
        "return_description": "包含结构化迁移方案的JSON字符串",
        "dependencies": ["datetime"],
        "implementation_notes": [
          "分析当前环境和目标需求",
          "基于generate_aws_solution生成目标架构",
          "设计迁移策略和时间表",
          "提供风险缓解措施和迁移工具建议",
          "包含迁移成本估算"
        ],
        "error_handling": [
          "处理不完整或模糊的环境描述和需求",
          "捕获并处理各种错误",
          "返回格式化的错误信息"
        ],
        "usage_examples": [
          "为客户'ABC公司'从本地数据中心迁移到AWS生成迁移方案"
        ]
      },
      {
        "tool_name": "generate_comparative_proposal",
        "description": "生成对比竞争对手产品的AWS销售报价方案",
        "function_signature": "generate_comparative_proposal(customer_name: str, competitor_info: str, requirements: str, region: str = \"us-east-1\", is_production: bool = True, contact_info: Optional[Dict[str, str]] = None) -> str",
        "parameters": [
          {
            "name": "customer_name",
            "type": "str",
            "description": "客户名称",
            "required": true
          },
          {
            "name": "competitor_info",
            "type": "str",
            "description": "竞争对手信息",
            "required": true
          },
          {
            "name": "requirements",
            "type": "str",
            "description": "客户需求描述",
            "required": true
          },
          {
            "name": "region",
            "type": "str",
            "description": "AWS区域代码",
            "required": false
          },
          {
            "name": "is_production",
            "type": "bool",
            "description": "是否用于生产环境",
            "required": false
          },
          {
            "name": "contact_info",
            "type": "Optional[Dict[str, str]]",
            "description": "联系信息",
            "required": false
          }
        ],
        "return_type": "str",
        "return_description": "包含结构化对比报价方案的JSON字符串",
        "dependencies": ["datetime"],
        "implementation_notes": [
          "识别竞争对手（阿里云、腾讯云等）",
          "基于generate_aws_solution生成AWS解决方案",
          "提供AWS与竞争对手的详细对比分析",
          "突出AWS的优势和差异化价值",
          "包含TCO分析和客户成功案例"
        ],
        "error_handling": [
          "处理不完整或模糊的竞争对手信息和需求",
          "捕获并处理各种错误",
          "返回格式化的错误信息"
        ],
        "usage_examples": [
          "为客户'ABC公司'生成AWS与阿里云的对比报价方案"
        ]
      },
      {
        "tool_name": "get_aws_regions",
        "description": "获取所有AWS区域及其显示名称",
        "function_signature": "get_aws_regions() -> str",
        "parameters": [],
        "return_type": "str",
        "return_description": "包含AWS区域及其显示名称的JSON字符串",
        "dependencies": [],
        "implementation_notes": [
          "提供完整的AWS区域列表",
          "包括中国区域"
        ],
        "error_handling": [
          "捕获并处理各种错误",
          "返回格式化的错误信息"
        ],
        "usage_examples": [
          "获取所有可用的AWS区域列表"
        ]
      },
      {
        "tool_name": "parse_requirements",
        "description": "将自然语言需求解析为结构化的AWS资源需求",
        "function_signature": "parse_requirements(description: str) -> str",
        "parameters": [
          {
            "name": "description",
            "type": "str",
            "description": "需求的自然语言描述",
            "required": true
          }
        ],
        "return_type": "str",
        "return_description": "包含结构化AWS资源需求的JSON字符串",
        "dependencies": ["re"],
        "implementation_notes": [
          "使用正则表达式提取关键需求参数",
          "识别需要的AWS服务类型",
          "提供置信度评估"
        ],
        "error_handling": [
          "处理不完整或模糊的需求描述",
          "捕获并处理各种错误",
          "返回格式化的错误信息"
        ],
        "usage_examples": [
          "解析'需要4核8GB内存的EC2实例和100GB SSD存储'的需求"
        ]
      }
    ],
    "code_quality": {
      "code_standards": [
        "遵循PEP 8 Python代码风格指南",
        "使用类型注解提高代码可读性和安全性",
        "添加详细的文档字符串",
        "使用一致的命名约定",
        "模块化设计，每个工具专注于单一功能"
      ],
      "testing_strategy": [
        "单元测试关键功能",
        "模拟AWS API响应进行测试",
        "测试各种边缘情况和错误处理",
        "验证输入参数验证逻辑",
        "验证缓存机制的有效性"
      ],
      "performance_considerations": [
        "实现缓存机制减少API调用",
        "优化数据处理逻辑",
        "避免不必要的计算",
        "使用并行处理处理多个价格查询",
        "定期清理缓存避免内存泄漏"
      ],
      "security_measures": [
        "验证所有输入参数",
        "避免在日志中记录敏感信息",
        "使用安全的API调用方式",
        "处理异常时不暴露敏感信息",
        "遵循最小权限原则"
      ]
    },
    "integration_details": {
      "aws_services": [
        "AWS Pricing API",
        "Amazon EC2",
        "Amazon EBS",
        "Amazon S3",
        "Amazon RDS",
        "Amazon ElastiCache",
        "Amazon OpenSearch Service",
        "Elastic Load Balancing"
      ],
      "external_libraries": [
        "boto3",
        "botocore",
        "strands",
        "json",
        "logging",
        "re",
        "typing",
        "decimal",
        "time",
        "datetime"
      ],
      "api_endpoints": [
        "AWS Pricing API (pricing.us-east-1.amazonaws.com)",
        "AWS Pricing API (pricing.ap-south-1.amazonaws.com)",
        "AWS EC2 API (ec2.{region}.amazonaws.com)"
      ],
      "data_formats": [
        "JSON",
        "AWS Pricing API响应格式",
        "自定义结构化输出格式"
      ]
    },
    "development_notes": "在开发过程中，我们发现AWS Pricing API的调用存在一些限制和特殊情况。首先，该API仅在us-east-1和ap-south-1区域可用，但可以查询任何区域的价格。其次，中国区域的价格需要特殊处理，因为它们使用不同的账户系统和定价模型。为了解决这些问题，我们实现了灵活的区域处理逻辑和缓存机制，以提高性能并减少API调用次数。在推荐算法方面，我们设计了基于正则表达式的自然语言解析系统，能够从用户描述中提取关键需求参数，并根据这些参数提供合理的资源推荐。此外，我们还实现了多种报价格式，满足不同场景的需求，包括标准销售报价、迁移方案和竞争对手对比分析。整体而言，这套工具提供了全面的AWS产品报价和推荐功能，能够满足销售人员和技术顾问的各种需求。"
  }
}