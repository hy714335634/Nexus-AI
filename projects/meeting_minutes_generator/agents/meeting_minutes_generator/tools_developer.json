{
  "tool_development": {
    "development_overview": {
      "project_name": "meeting_minutes_generator",
      "version": "1.0",
      "date": "2025-09-22",
      "development_scope": "开发视频会议纪要生成所需的核心工具，包括视频处理、音频提取、语音转文本和会议纪要生成功能",
      "design_principles": [
        "模块化设计，每个工具函数专注于单一功能",
        "健壮的错误处理机制，确保工具在各种情况下都能提供明确的反馈",
        "使用AWS服务集成，实现高质量的语音识别和文本生成",
        "标准化的JSON输出格式，便于工具间数据传递和结果解析",
        "完整的类型注解和文档字符串，提高代码可读性和可维护性"
      ],
      "key_decisions": [
        "使用FFmpeg进行视频处理和音频提取，因其强大的多媒体处理能力",
        "采用AWS Transcribe进行语音转文本，支持说话人分离功能",
        "使用AWS Bedrock的Claude模型生成会议纪要，确保高质量的文本生成",
        "提供完整的处理流水线工具，简化用户操作",
        "实现临时文件管理和清理机制，确保资源有效利用"
      ]
    },
    "tools": [
      {
        "tool_name": "extract_audio_from_video",
        "description": "从视频文件中提取音频内容，支持多种视频格式和音频质量设置",
        "function_signature": "extract_audio_from_video(video_path: str, output_path: Optional[str] = None, audio_format: str = \"wav\", start_time: Optional[float] = None, end_time: Optional[float] = None, audio_quality: str = \"medium\", overwrite: bool = False) -> str",
        "parameters": [
          {
            "name": "video_path",
            "type": "str",
            "description": "输入视频文件的路径",
            "required": true
          },
          {
            "name": "output_path",
            "type": "Optional[str]",
            "description": "保存提取音频的路径，如不提供则自动生成",
            "required": false
          },
          {
            "name": "audio_format",
            "type": "str",
            "description": "输出音频格式(wav, mp3, aac等)",
            "required": false
          },
          {
            "name": "start_time",
            "type": "Optional[float]",
            "description": "开始提取的时间点（秒）",
            "required": false
          },
          {
            "name": "end_time",
            "type": "Optional[float]",
            "description": "结束提取的时间点（秒）",
            "required": false
          },
          {
            "name": "audio_quality",
            "type": "str",
            "description": "音频质量设置(low, medium, high)",
            "required": false
          },
          {
            "name": "overwrite",
            "type": "bool",
            "description": "是否覆盖已存在的输出文件",
            "required": false
          }
        ],
        "return_type": "str",
        "return_description": "JSON格式的提取结果，包含成功状态、输出文件路径和音频元数据",
        "dependencies": ["ffmpeg", "json", "os", "logging"],
        "implementation_notes": [
          "使用FFmpeg库进行音频提取",
          "支持多种视频格式(MP4, AVI, MOV等)",
          "提供不同的音频质量选项",
          "支持音频片段提取(通过start_time和end_time)"
        ],
        "error_handling": [
          "检查视频文件是否存在",
          "验证视频是否包含音频流",
          "处理FFmpeg可能出现的错误",
          "提供详细的错误信息和错误类型"
        ],
        "usage_examples": [
          "extract_audio_from_video('meeting.mp4')",
          "extract_audio_from_video('presentation.avi', output_path='audio.wav', audio_quality='high')",
          "extract_audio_from_video('interview.mp4', start_time=60, end_time=300)"
        ]
      },
      {
        "tool_name": "transcribe_audio",
        "description": "使用AWS Transcribe服务将音频转换为文本，支持说话人分离",
        "function_signature": "transcribe_audio(audio_path: str, language_code: str = \"zh-CN\", enable_speaker_diarization: bool = True, max_speakers: int = 10, output_format: str = \"json\", vocabulary_filter_method: Optional[str] = None, vocabulary_filter_names: Optional[List[str]] = None, custom_vocabulary: Optional[List[str]] = None, output_path: Optional[str] = None) -> str",
        "parameters": [
          {
            "name": "audio_path",
            "type": "str",
            "description": "要转录的音频文件路径",
            "required": true
          },
          {
            "name": "language_code",
            "type": "str",
            "description": "语言代码(如zh-CN表示中文，en-US表示英语)",
            "required": false
          },
          {
            "name": "enable_speaker_diarization",
            "type": "bool",
            "description": "是否识别音频中的不同说话人",
            "required": false
          },
          {
            "name": "max_speakers",
            "type": "int",
            "description": "最大说话人数量(启用说话人分离时)",
            "required": false
          },
          {
            "name": "output_format",
            "type": "str",
            "description": "输出格式(json或text)",
            "required": false
          },
          {
            "name": "vocabulary_filter_method",
            "type": "Optional[str]",
            "description": "词汇过滤方法(mask, remove, tag)",
            "required": false
          },
          {
            "name": "vocabulary_filter_names",
            "type": "Optional[List[str]]",
            "description": "词汇过滤器名称列表",
            "required": false
          },
          {
            "name": "custom_vocabulary",
            "type": "Optional[List[str]]",
            "description": "自定义词汇列表",
            "required": false
          },
          {
            "name": "output_path",
            "type": "Optional[str]",
            "description": "保存转录结果的路径",
            "required": false
          }
        ],
        "return_type": "str",
        "return_description": "JSON格式的转录结果，包含文本内容、说话人信息和元数据",
        "dependencies": ["boto3", "json", "os", "tempfile"],
        "implementation_notes": [
          "使用AWS Transcribe服务进行语音转文本",
          "支持说话人分离功能",
          "通过S3临时存储音频文件",
          "支持自定义词汇和词汇过滤"
        ],
        "error_handling": [
          "检查音频文件是否存在",
          "处理AWS服务可能出现的错误",
          "提供详细的错误信息和错误类型",
          "实现资源清理机制"
        ],
        "usage_examples": [
          "transcribe_audio('meeting_audio.wav')",
          "transcribe_audio('interview.mp3', language_code='en-US', enable_speaker_diarization=True)",
          "transcribe_audio('conference.wav', output_format='text', output_path='transcript.txt')"
        ]
      },
      {
        "tool_name": "generate_meeting_minutes",
        "description": "使用AWS Bedrock服务根据转录文本生成标准格式的会议纪要",
        "function_signature": "generate_meeting_minutes(transcript: str, meeting_title: Optional[str] = None, meeting_date: Optional[str] = None, participants: Optional[List[str]] = None, format_type: str = \"standard\", language: str = \"zh-CN\", output_path: Optional[str] = None) -> str",
        "parameters": [
          {
            "name": "transcript",
            "type": "str",
            "description": "转录文本或转录JSON文件路径",
            "required": true
          },
          {
            "name": "meeting_title",
            "type": "Optional[str]",
            "description": "会议标题",
            "required": false
          },
          {
            "name": "meeting_date",
            "type": "Optional[str]",
            "description": "会议日期",
            "required": false
          },
          {
            "name": "participants",
            "type": "Optional[List[str]]",
            "description": "会议参与者列表",
            "required": false
          },
          {
            "name": "format_type",
            "type": "str",
            "description": "格式类型(standard, detailed, summary)",
            "required": false
          },
          {
            "name": "language",
            "type": "str",
            "description": "输出语言代码(zh-CN表示中文，en-US表示英语)",
            "required": false
          },
          {
            "name": "output_path",
            "type": "Optional[str]",
            "description": "保存生成的会议纪要的路径",
            "required": false
          }
        ],
        "return_type": "str",
        "return_description": "JSON格式的会议纪要生成结果，包含纪要文本和元数据",
        "dependencies": ["boto3", "json", "os"],
        "implementation_notes": [
          "使用AWS Bedrock的Claude模型生成会议纪要",
          "支持不同格式类型的纪要生成",
          "处理转录文本或JSON文件作为输入",
          "提供多语言支持"
        ],
        "error_handling": [
          "验证转录内容的有效性",
          "处理AWS Bedrock服务可能出现的错误",
          "提供详细的错误信息和错误类型"
        ],
        "usage_examples": [
          "generate_meeting_minutes('transcript.json')",
          "generate_meeting_minutes(transcript_text, meeting_title='产品规划会议', format_type='detailed')",
          "generate_meeting_minutes('transcript.json', participants=['张三', '李四', '王五'], output_path='minutes.md')"
        ]
      },
      {
        "tool_name": "process_video_to_minutes",
        "description": "一站式处理视频文件，提取音频、转录并生成会议纪要",
        "function_signature": "process_video_to_minutes(video_path: str, meeting_title: Optional[str] = None, meeting_date: Optional[str] = None, participants: Optional[List[str]] = None, language_code: str = \"zh-CN\", format_type: str = \"standard\", output_dir: Optional[str] = None, cleanup_temp_files: bool = True) -> str",
        "parameters": [
          {
            "name": "video_path",
            "type": "str",
            "description": "视频文件路径",
            "required": true
          },
          {
            "name": "meeting_title",
            "type": "Optional[str]",
            "description": "会议标题",
            "required": false
          },
          {
            "name": "meeting_date",
            "type": "Optional[str]",
            "description": "会议日期",
            "required": false
          },
          {
            "name": "participants",
            "type": "Optional[List[str]]",
            "description": "会议参与者列表",
            "required": false
          },
          {
            "name": "language_code",
            "type": "str",
            "description": "语言代码，用于转录和输出",
            "required": false
          },
          {
            "name": "format_type",
            "type": "str",
            "description": "会议纪要格式(standard, detailed, summary)",
            "required": false
          },
          {
            "name": "output_dir",
            "type": "Optional[str]",
            "description": "保存输出文件的目录",
            "required": false
          },
          {
            "name": "cleanup_temp_files",
            "type": "bool",
            "description": "是否在处理后删除临时文件",
            "required": false
          }
        ],
        "return_type": "str",
        "return_description": "JSON格式的处理结果，包含所有步骤的输出路径和元数据",
        "dependencies": ["json", "os", "logging"],
        "implementation_notes": [
          "集成了音频提取、转录和会议纪要生成的完整流程",
          "自动管理临时文件和输出目录",
          "提供处理进度日志",
          "支持自定义输出位置和格式"
        ],
        "error_handling": [
          "检查视频文件是否存在",
          "处理每个步骤可能出现的错误",
          "提供详细的错误信息和错误发生的步骤",
          "即使某步骤失败也返回之前步骤的结果"
        ],
        "usage_examples": [
          "process_video_to_minutes('meeting.mp4')",
          "process_video_to_minutes('conference.avi', meeting_title='季度回顾', participants=['张三', '李四'])",
          "process_video_to_minutes('interview.mp4', language_code='en-US', output_dir='output')"
        ]
      },
      {
        "tool_name": "validate_video_file",
        "description": "验证视频文件的有效性，检查格式支持和音频流存在性",
        "function_signature": "validate_video_file(video_path: str, check_audio: bool = True) -> str",
        "parameters": [
          {
            "name": "video_path",
            "type": "str",
            "description": "要验证的视频文件路径",
            "required": true
          },
          {
            "name": "check_audio",
            "type": "bool",
            "description": "是否检查音频流",
            "required": false
          }
        ],
        "return_type": "str",
        "return_description": "JSON格式的验证结果，包含有效性状态和视频元数据",
        "dependencies": ["ffmpeg", "json", "os"],
        "implementation_notes": [
          "使用FFmpeg库获取视频文件信息",
          "验证文件格式是否受支持",
          "检查视频和音频流的存在性",
          "提取视频元数据如分辨率、编解码器等"
        ],
        "error_handling": [
          "检查文件是否存在",
          "验证文件格式是否受支持",
          "处理FFmpeg可能出现的错误",
          "提供详细的错误信息和错误类型"
        ],
        "usage_examples": [
          "validate_video_file('meeting.mp4')",
          "validate_video_file('presentation.avi', check_audio=False)",
          "validate_video_file('interview.mkv')"
        ]
      }
    ],
    "code_quality": {
      "code_standards": [
        "遵循PEP 8编码规范",
        "使用完整的类型注解提高代码可读性",
        "详细的文档字符串，包含参数和返回值说明",
        "一致的错误处理和日志记录机制",
        "标准化的JSON输出格式"
      ],
      "testing_strategy": [
        "单元测试验证每个工具的核心功能",
        "边界条件测试（如空文件、无音频的视频等）",
        "集成测试验证完整处理流程",
        "错误处理测试确保工具在异常情况下的行为"
      ],
      "performance_considerations": [
        "大型视频文件处理的内存优化",
        "AWS服务调用的异步处理和状态管理",
        "临时文件的有效管理和清理",
        "进度反馈机制，特别是对长时间运行的操作"
      ],
      "security_measures": [
        "安全处理用户提供的文件路径",
        "临时文件的安全管理和清理",
        "AWS服务访问权限的最小化原则",
        "敏感信息（如会议内容）的安全处理"
      ]
    },
    "integration_details": {
      "aws_services": [
        "AWS Transcribe用于语音转文本，支持说话人分离",
        "AWS S3用于临时文件存储",
        "AWS Bedrock用于会议纪要生成"
      ],
      "external_libraries": [
        "FFmpeg用于视频处理和音频提取",
        "boto3用于AWS服务集成",
        "json用于结构化数据处理",
        "logging用于日志记录"
      ],
      "api_endpoints": [
        "AWS Transcribe API",
        "AWS Bedrock API",
        "AWS S3 API"
      ],
      "data_formats": [
        "JSON用于结构化数据交换",
        "WAV/MP3用于音频处理",
        "MP4/AVI/MOV等视频格式",
        "Markdown用于会议纪要输出"
      ]
    },
    "development_notes": "工具开发过程中，我们特别关注了工具的健壮性和用户体验。每个工具都实现了详细的错误处理机制，确保在各种异常情况下都能提供清晰的反馈。我们选择FFmpeg作为视频处理库，因为它支持广泛的视频格式和高质量的音频提取。对于语音转文本，我们使用AWS Transcribe服务，它提供了高准确率的转录和说话人分离功能，这对于会议纪要生成至关重要。会议纪要生成则使用AWS Bedrock的Claude模型，它能够理解会议上下文并生成结构化的纪要。我们还开发了一个一站式处理工具，简化了用户操作流程，只需提供视频文件和基本会议信息，就能自动完成从视频到会议纪要的全部处理。所有工具都采用标准化的JSON输出格式，便于结果解析和错误处理。"
  }
}