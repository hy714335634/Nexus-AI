{
  "system_design": {
    "design_overview": {
      "project_name": "disease_hpo_mapping_agent",
      "version": "1.0",
      "date": "2025-09-24",
      "design_scope": "设计一个能够从医生主诉中提取疾病名称并关联到HPO ID的智能体系统，包括自然语言处理、疾病名称标准化、HPO数据库检索和模糊匹配功能",
      "design_principles": [
        "准确性优先：确保疾病名称提取和HPO ID映射的准确性",
        "容错设计：能够处理不完整或非正式的疾病描述",
        "多步骤推理：在直接匹配失败时采用多步骤推理策略",
        "可扩展性：支持未来扩展更多医学数据库和功能",
        "双语支持：完整支持中英文疾病名称的处理"
      ],
      "key_decisions": [
        "采用单Agent架构，集中处理所有功能",
        "使用API集成专家模板作为基础框架",
        "集成外部HPO数据库API进行疾病-HPO映射",
        "实现本地缓存机制减少API调用次数",
        "采用多级匹配策略：精确匹配→模糊匹配→关键词搜索→推理匹配"
      ],
      "workflow_type": "single_agent",
      "recommended_templates": ["api_integration_agent"]
    },
    "architecture": {
      "system_context": "系统作为一个独立的智能体运行，接收用户输入的医生主诉文本，通过自然语言处理提取疾病名称，然后查询HPO数据库获取对应的HPO ID和相关信息，最后返回标准化的疾病-HPO映射结果",
      "agent_topology": "单Agent架构，由一个核心Agent负责所有功能的协调和处理，包括文本分析、疾病名称提取、数据库查询和结果处理",
      "interaction_model": "用户通过文本输入与Agent交互，Agent处理请求并返回结构化的疾病-HPO映射结果。Agent内部采用管道处理模式，依次执行文本分析、疾病提取、名称标准化、HPO查询和结果整合等步骤",
      "technology_stack": {
        "sdk": "Strands SDK",
        "runtime": "Local",
        "integrations": [
          "HPO数据库API",
          "医学术语标准库",
          "自然语言处理模块",
          "本地缓存系统"
        ]
      }
    },
    "agents": [
      {
        "name": "disease_hpo_mapper",
        "purpose": "从医生主诉中提取疾病名称并映射到HPO ID",
        "responsibilities": [
          "解析和理解医生主诉文本",
          "提取和标准化疾病名称",
          "查询HPO数据库获取疾病对应的HPO ID",
          "在直接匹配失败时执行模糊查询和关键词搜索",
          "进行多步骤推理以处理复杂或不完整的疾病描述",
          "返回结构化的疾病-HPO映射结果"
        ],
        "interfaces": {
          "inputs": [
            "医生主诉文本（中文或英文）",
            "可选的查询参数（精确度阈值、最大返回结果数等）",
            "可选的语言偏好设置"
          ],
          "outputs": [
            "标准化疾病名称（中英文）",
            "对应的HPO ID列表",
            "每个HPO ID的详细信息",
            "匹配置信度分数",
            "推理过程说明（当执行多步骤推理时）"
          ]
        },
        "dependencies": [
          "HPO数据库API",
          "医学术语标准库",
          "自然语言处理模块"
        ],
        "implementation_notes": [
          "基于API集成专家模板实现",
          "使用Claude Opus模型进行自然语言理解和推理",
          "实现本地缓存以提高常见疾病查询性能",
          "采用多级匹配策略提高识别准确率",
          "支持批量处理多条医生主诉"
        ],
        "recommended_template": "api_integration_agent"
      }
    ],
    "data_models": [
      {
        "name": "MedicalDescription",
        "schema": "{ 'text': '医生主诉文本', 'language': '语言代码(zh/en)', 'query_params': { 'threshold': '匹配阈值', 'max_results': '最大返回结果数' } }",
        "validation_rules": [
          "text字段不能为空",
          "language必须是支持的语言代码",
          "threshold必须在0-1之间",
          "max_results必须是正整数"
        ],
        "relationships": ["输入数据模型，用于接收用户请求"]
      },
      {
        "name": "DiseaseEntity",
        "schema": "{ 'name': { 'zh': '中文疾病名称', 'en': '英文疾病名称' }, 'standard_name': '标准化疾病名称', 'confidence': '提取置信度', 'source_text': '原始文本片段' }",
        "validation_rules": [
          "至少包含中文或英文疾病名称",
          "confidence必须在0-1之间"
        ],
        "relationships": ["从MedicalDescription提取的疾病实体"]
      },
      {
        "name": "HPOMapping",
        "schema": "{ 'disease': DiseaseEntity, 'hpo_ids': [{ 'id': 'HPO ID', 'name': { 'zh': '中文名称', 'en': '英文名称' }, 'definition': '定义', 'confidence': '匹配置信度' }], 'match_type': '匹配类型(exact/fuzzy/keyword/inference)', 'reasoning_steps': ['推理步骤'] }",
        "validation_rules": [
          "disease必须是有效的DiseaseEntity",
          "hpo_ids不能为空（除非无匹配）",
          "match_type必须是支持的匹配类型"
        ],
        "relationships": ["输出数据模型，包含DiseaseEntity和对应的HPO映射结果"]
      },
      {
        "name": "MappingResponse",
        "schema": "{ 'request_id': '请求ID', 'timestamp': '处理时间戳', 'mappings': [HPOMapping], 'status': '处理状态', 'message': '状态消息' }",
        "validation_rules": [
          "request_id必须唯一",
          "timestamp必须是有效的ISO时间格式",
          "status必须是预定义的状态代码"
        ],
        "relationships": ["最终返回给用户的响应数据模型"]
      }
    ],
    "interaction_flows": [
      {
        "name": "基本疾病-HPO映射流程",
        "description": "处理单个医生主诉，提取疾病名称并映射到HPO ID的标准流程",
        "steps": [
          {
            "step": "接收医生主诉输入",
            "agent": "disease_hpo_mapper",
            "action": "解析输入文本和参数",
            "data": "MedicalDescription"
          },
          {
            "step": "文本预处理",
            "agent": "disease_hpo_mapper",
            "action": "清洗文本、分词、去除停用词",
            "data": "处理后的文本"
          },
          {
            "step": "疾病名称提取",
            "agent": "disease_hpo_mapper",
            "action": "使用NLP识别和提取疾病名称",
            "data": "DiseaseEntity列表"
          },
          {
            "step": "疾病名称标准化",
            "agent": "disease_hpo_mapper",
            "action": "将非正式或不完整的疾病名称转换为标准名称",
            "data": "标准化的DiseaseEntity列表"
          },
          {
            "step": "HPO数据库查询",
            "agent": "disease_hpo_mapper",
            "action": "查询HPO数据库获取对应的HPO ID",
            "data": "初步HPOMapping结果"
          },
          {
            "step": "结果验证和丰富",
            "agent": "disease_hpo_mapper",
            "action": "验证匹配结果并添加详细信息",
            "data": "完整的HPOMapping结果"
          },
          {
            "step": "响应生成",
            "agent": "disease_hpo_mapper",
            "action": "生成结构化的响应数据",
            "data": "MappingResponse"
          }
        ]
      },
      {
        "name": "模糊匹配流程",
        "description": "当精确匹配失败时，执行模糊匹配和关键词搜索的流程",
        "steps": [
          {
            "step": "检测精确匹配失败",
            "agent": "disease_hpo_mapper",
            "action": "确认精确匹配无结果",
            "data": "DiseaseEntity"
          },
          {
            "step": "执行模糊匹配",
            "agent": "disease_hpo_mapper",
            "action": "使用字符串相似度算法查找相似疾病名称",
            "data": "相似度排序的候选疾病列表"
          },
          {
            "step": "执行关键词搜索",
            "agent": "disease_hpo_mapper",
            "action": "提取关键词并在数据库中搜索",
            "data": "关键词搜索结果"
          },
          {
            "step": "结果合并和排序",
            "agent": "disease_hpo_mapper",
            "action": "合并模糊匹配和关键词搜索结果，按相关性排序",
            "data": "排序后的候选结果"
          },
          {
            "step": "阈值过滤",
            "agent": "disease_hpo_mapper",
            "action": "根据置信度阈值过滤结果",
            "data": "过滤后的HPOMapping结果"
          }
        ]
      },
      {
        "name": "多步骤推理流程",
        "description": "当模糊匹配和关键词搜索也失败时，执行多步骤推理的流程",
        "steps": [
          {
            "step": "检测模糊匹配失败",
            "agent": "disease_hpo_mapper",
            "action": "确认模糊匹配和关键词搜索无有效结果",
            "data": "DiseaseEntity"
          },
          {
            "step": "症状分析",
            "agent": "disease_hpo_mapper",
            "action": "从文本中提取症状和临床表现",
            "data": "症状列表"
          },
          {
            "step": "医学知识推理",
            "agent": "disease_hpo_mapper",
            "action": "基于症状和医学知识推理可能的疾病",
            "data": "推理的疾病候选列表"
          },
          {
            "step": "HPO数据库验证",
            "agent": "disease_hpo_mapper",
            "action": "在HPO数据库中验证推理的疾病",
            "data": "验证后的疾病列表"
          },
          {
            "step": "生成推理过程说明",
            "agent": "disease_hpo_mapper",
            "action": "记录和格式化推理步骤",
            "data": "包含推理过程的HPOMapping结果"
          }
        ]
      }
    ],
    "security_considerations": [
      "确保医疗数据的隐私保护，不存储敏感个人信息",
      "实现适当的访问控制和认证机制",
      "加密API通信以保护数据传输安全",
      "遵循医疗数据处理的相关法规和标准",
      "实现日志记录但确保不记录敏感医疗信息"
    ],
    "error_handling": [
      "实现分层错误处理策略，区分用户输入错误、处理错误和系统错误",
      "对于无法识别的疾病名称，提供清晰的错误消息和可能的替代建议",
      "当HPO数据库查询失败时，使用本地缓存数据作为备份",
      "实现重试机制处理临时网络或API故障",
      "记录详细错误日志以便故障排除，但确保不包含敏感信息"
    ],
    "performance_considerations": [
      "实现本地缓存机制减少对HPO数据库的重复查询",
      "优化自然语言处理流程，减少处理延迟",
      "使用异步处理模式处理批量请求",
      "实现请求限流以防止API过载",
      "定期更新本地医学术语库和缓存以保持数据新鲜度"
    ],
    "monitoring_strategy": [
      "记录关键性能指标，如请求处理时间、匹配成功率等",
      "实现健康检查端点监控系统状态",
      "设置警报机制监测异常错误率或性能下降",
      "收集匹配质量反馈以持续改进系统",
      "定期审计日志确保系统安全和合规"
    ]
  },
  "design_rationale": "本设计采用单Agent架构，基于API集成专家模板实现，这是因为系统的核心功能集中在疾病名称提取和HPO ID映射这一专业领域，不需要多角色协作。单Agent架构简化了系统复杂度，便于维护和扩展。选择API集成专家模板是因为系统需要与外部HPO数据库API进行深度集成，该模板提供了完整的HTTP请求处理功能和数据格式转换工具。\n\n系统设计了多级匹配策略（精确匹配→模糊匹配→关键词搜索→推理匹配），以应对不同复杂度的疾病描述。当直接匹配失败时，系统会逐步尝试更复杂的匹配方法，最大化识别成功率。同时，实现本地缓存机制可以提高常见疾病查询的响应速度，减少对外部API的依赖。\n\n数据模型设计支持中英文双语操作，并包含置信度评分和匹配类型信息，使用户能够了解结果的可靠性。交互流程设计涵盖了从基本映射到复杂推理的多种场景，确保系统能够处理各种复杂度的医生主诉。\n\n在安全性方面，设计考虑了医疗数据的隐私保护和合规要求，实现了适当的访问控制和数据保护措施。错误处理策略分层设计，确保系统在各种异常情况下都能提供有用的反馈。性能和监控策略则确保系统能够高效运行并持续改进。"
}